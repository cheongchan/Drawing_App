<!DOCTYPE html>
<html>
<head>
  <title>Drawing</title>
  <%= stylesheet_link_tag "application", "data-turbolinks-track" => true %>
  <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
  <script type="text/paperscript", canvas="myCanvas">


//
// Initiate socket.io
var socket = io.connect('172.27.129.91:8888');


//
// Define global variables
//
var currentPaths = [];
var userId = Math.round($.now()*Math.random());


//
// Define reusable application wide functions
//
function extractPoints(event) {
  return [event.point.x, event.point.y];
}

function filterPaths(userId) {
  var results = currentPaths.filter( function(path) {
    return (path.userId == userId && (path.drawing == 0 || path.drawing == 1));
  });
    return results[0];
}

function drawEvent(data) {
  if (data.drawing == 0) {
    var path = new Path();
    path.strokeColor = 'black';
    currentPaths.push({
      userId: data.userId,
      drawing: data.drawing,
      path: path,
      pathId: data.pathId
    });
  }
  else if (data.drawing == 1) {

    var userDrawObject = filterPaths(data.userId);
    var path = userDrawObject.path;
    path.strokeColor = 'black';
    path.add(new Point(data.points));
    view.draw();

    userDrawObject.drawing = data.drawing;
  }
  else if (data.drawing == 2) {
    var userDrawObject = filterPaths(data.userId);
    var path = userDrawObject.path;
    userDrawObject.drawing = data.drawing;
  }
}

function emitPoint(eventName, data) {
   socket.emit(eventName, data);
}


//
// Define local event functions
//
function onMouseDown(event) {

  var uniquePath = Math.round($.now()*Math.random());
  var points = extractPoints(event);
  var drawing = 0;

  var data = {
    userId: userId,
    drawing: drawing,
    points: points,
    pathId: uniquePath
  };

  drawEvent(data);
  emitPoint('onMouseDown', data);

}

function onMouseDrag(event) {
  var points = extractPoints(event);
  var data = { drawing: 1, points: points, userId: userId};

  drawEvent(data);
  emitPoint('onMouseDrag', data);
}

function onMouseUp(event) {
  var data = { drawing: 2, userId: userId };
  drawEvent(data);
  emitPoint('onMouseUp', data);
}


//
// All emiter functions
//
socket.on('onMouseDown', function(data){
  drawEvent(data);
});

socket.on('onMouseDrag', function(data){
  drawEvent(data);
});

socket.on('onMouseUp', function(data){
  drawEvent(data);
});

</script>
  <%= csrf_meta_tags %>
</head>
<body>

<%= yield %>

</body>
</html>
